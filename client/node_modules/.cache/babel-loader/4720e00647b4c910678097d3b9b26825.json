{"ast":null,"code":"var _jsxFileName = \"/Users/johnsaf/Documents/code/Quiz/client/src/Questions.tsx\";\nimport { Button } from \"@mui/material\";\nimport * as React from \"react\";\nimport Question from \"./Question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Questions({\n  dataQuestions,\n  counter,\n  setCounter,\n  isLastQuestion,\n  correctAnswers\n}) {\n  correctAnswers[counter] = null;\n\n  const question = /*#__PURE__*/_jsxDEV(Question, {\n    questionData: dataQuestions.questions[counter],\n    correctAnswers: correctAnswers,\n    counter: counter\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [question, /*#__PURE__*/_jsxDEV(Button, {\n      sx: {\n        mt: 1,\n        mr: 1\n      },\n      onClick: () => {\n        setCounter(counter + 1);\n      },\n      variant: \"outlined\",\n      children: isLastQuestion ? \"Finish\" : \"Next Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["/Users/johnsaf/Documents/code/Quiz/client/src/Questions.tsx"],"names":["Button","React","Question","Questions","dataQuestions","counter","setCounter","isLastQuestion","correctAnswers","question","questions","mt","mr"],"mappings":";AAAA,SACEA,MADF,QAQO,eARP;AASA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,QAAP,MAAqB,YAArB;;;AAWA,eAAe,SAASC,SAAT,CAAmB;AAChCC,EAAAA,aADgC;AAEhCC,EAAAA,OAFgC;AAGhCC,EAAAA,UAHgC;AAIhCC,EAAAA,cAJgC;AAKhCC,EAAAA;AALgC,CAAnB,EAML;AACRA,EAAAA,cAAc,CAACH,OAAD,CAAd,GAA0B,IAA1B;;AACA,QAAMI,QAAQ,gBACZ,QAAC,QAAD;AACE,IAAA,YAAY,EAAEL,aAAa,CAACM,SAAd,CAAwBL,OAAxB,CADhB;AAEE,IAAA,cAAc,EAAEG,cAFlB;AAGE,IAAA,OAAO,EAAEH;AAHX;AAAA;AAAA;AAAA;AAAA,UADF;;AAOA,sBACE;AAAA,eACGI,QADH,eAEE,QAAC,MAAD;AACE,MAAA,EAAE,EAAE;AAAEE,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,EAAE,EAAE;AAAb,OADN;AAEE,MAAA,OAAO,EAAE,MAAM;AACbN,QAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD,OAJH;AAKE,MAAA,OAAO,EAAC,UALV;AAAA,gBAOGE,cAAc,GAAG,QAAH,GAAc;AAP/B;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAcD;KA7BuBJ,S","sourcesContent":["import {\n  Button,\n  FormControl,\n  FormControlLabel,\n  FormHelperText,\n  FormLabel,\n  Radio,\n  RadioGroup,\n} from \"@mui/material\";\nimport * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Question from \"./Question\";\nimport { data } from \"./Quiz\";\n\ntype props = {\n  dataQuestions: data;\n  counter: number;\n  setCounter: React.Dispatch<React.SetStateAction<number>>;\n  isLastQuestion: boolean;\n  correctAnswers: Array<string | null>;\n};\n\nexport default function Questions({\n  dataQuestions,\n  counter,\n  setCounter,\n  isLastQuestion,\n  correctAnswers,\n}: props) {\n  correctAnswers[counter] = null;\n  const question = (\n    <Question\n      questionData={dataQuestions.questions[counter]}\n      correctAnswers={correctAnswers}\n      counter={counter}\n    />\n  );\n  return (\n    <>\n      {question}\n      <Button\n        sx={{ mt: 1, mr: 1 }}\n        onClick={() => {\n          setCounter(counter + 1);\n        }}\n        variant=\"outlined\"\n      >\n        {isLastQuestion ? \"Finish\" : \"Next Question\"}\n      </Button>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}