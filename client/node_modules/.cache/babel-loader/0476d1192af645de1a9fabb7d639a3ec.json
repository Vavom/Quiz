{"ast":null,"code":"var _jsxFileName = \"/Users/johnsaf/Documents/code/Quiz/client/src/Question.tsx\",\n    _s = $RefreshSig$();\n\nimport { FormControl, FormControlLabel, FormHelperText, FormLabel, Radio, RadioGroup } from \"@mui/material\";\nimport * as React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Questions({\n  questionData,\n  correctAnswers,\n  counter\n}) {\n  _s();\n\n  const [value, setValue] = React.useState(\"\");\n  const [error, setError] = React.useState(false);\n  const [helperText, setHelperText] = React.useState(\"Choose wisely\");\n\n  const handleRadioChange = event => {\n    var _event$target$value;\n\n    setValue(event.target.value);\n    correctAnswers[counter] = (_event$target$value = event.target.value) !== null && _event$target$value !== void 0 ? _event$target$value : null;\n  };\n\n  React.useEffect(() => {\n    correctAnswers[counter] = value;\n  }, [value]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (value === \"best\") {\n      setHelperText(\"You got it!\");\n      setError(false);\n    } else if (value === \"worst\") {\n      setHelperText(\"Sorry, wrong answer!\");\n      setError(true);\n    } else {\n      setHelperText(\"Please select an option.\");\n      setError(true);\n    }\n  };\n\n  console.log(correctAnswers);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: questionData.id,\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        m: 3\n      },\n      component: \"fieldset\",\n      error: error,\n      variant: \"standard\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        children: questionData.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        \"aria-label\": \"quiz\",\n        name: \"quiz\",\n        value: value,\n        onChange: handleRadioChange,\n        children: questionData.answers.map(answer => {\n          return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: answer.id,\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 26\n            }, this),\n            label: answer.answer\n          }, answer.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n        children: helperText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Questions, \"/EnOXv2/DYqonFsNtp+eP8hchUE=\");\n\n_c = Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["/Users/johnsaf/Documents/code/Quiz/client/src/Question.tsx"],"names":["FormControl","FormControlLabel","FormHelperText","FormLabel","Radio","RadioGroup","React","Questions","questionData","correctAnswers","counter","value","setValue","useState","error","setError","helperText","setHelperText","handleRadioChange","event","target","useEffect","handleSubmit","preventDefault","console","log","id","m","question","answers","map","answer"],"mappings":"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","sourcesContent":["import {\n  Button,\n  FormControl,\n  FormControlLabel,\n  FormHelperText,\n  FormLabel,\n  Radio,\n  RadioGroup,\n} from \"@mui/material\";\nimport * as React from \"react\";\n\ntype question = {\n  id: string;\n  question: string;\n  answers: Array<{\n    id: string;\n    answer: string;\n  }>;\n};\n\ntype props = {\n  questionData: question;\n  correctAnswers: Array<string | null>;\n  counter: number;\n};\n\nexport default function Questions({\n  questionData,\n  correctAnswers,\n  counter,\n}: props) {\n  const [value, setValue] = React.useState(\"\");\n  const [error, setError] = React.useState(false);\n  const [helperText, setHelperText] = React.useState(\"Choose wisely\");\n\n  const handleRadioChange = (event: any) => {\n    setValue(event.target.value);\n    correctAnswers[counter] = event.target.value ?? null;\n  };\n\n  React.useEffect(() => {\n    correctAnswers[counter] = value;\n  }, [value]);\n\n  const handleSubmit = (event: any) => {\n    event.preventDefault();\n\n    if (value === \"best\") {\n      setHelperText(\"You got it!\");\n      setError(false);\n    } else if (value === \"worst\") {\n      setHelperText(\"Sorry, wrong answer!\");\n      setError(true);\n    } else {\n      setHelperText(\"Please select an option.\");\n      setError(true);\n    }\n  };\n  console.log(correctAnswers);\n\n  return (\n    <form id={questionData.id} onSubmit={handleSubmit}>\n      <FormControl\n        sx={{ m: 3 }}\n        component=\"fieldset\"\n        error={error}\n        variant=\"standard\"\n      >\n        <FormLabel component=\"legend\">{questionData.question}</FormLabel>\n        <RadioGroup\n          aria-label=\"quiz\"\n          name=\"quiz\"\n          value={value}\n          onChange={handleRadioChange}\n        >\n          {questionData.answers.map((answer) => {\n            return (\n              <FormControlLabel\n                value={answer.id}\n                key={answer.id}\n                control={<Radio />}\n                label={answer.answer}\n              />\n            );\n          })}\n        </RadioGroup>\n        <FormHelperText>{helperText}</FormHelperText>\n      </FormControl>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}